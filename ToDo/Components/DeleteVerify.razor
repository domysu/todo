@using ToDo.Services;
@using ToDo.Models;
@inject TodoService TodoService

<div class="modal @ModalClass" tabindex="-1" role="dialog" style="display:@ModalDisplay">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Clear the list</h5>
            </div>
            <div class="modal-body">
                <p>Are you sure that you want to delete <b>ALL</b> items in the list?</p>
                <div class="modal-footer mt-3">
                    <button type="button" class="btn btn-danger" @onclick="HandleDelete">Delete</button>
                    <button type="button" class="btn btn-secondary" @onclick="Close">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

@if (ShowBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}

@code {
    public string ModalDisplay { get; set; } = "none;";
    public string ModalClass { get; set; } = "";
    public bool ShowBackdrop { get; set; } = false;

    public void Open()
    {
        ModalDisplay = "block;";
        ModalClass = "show";
        ShowBackdrop = true;
        StateHasChanged();
    }

    public void Close()
    {
        ModalDisplay = "none";
        ModalClass = "";
        ShowBackdrop = false;
        StateHasChanged();
    }

    private async Task HandleDelete()
    {
        await TodoService.DeleteAll();
        Close(); // Close the modal after deletion
    }
}
