@using ToDo.Services;
@using ToDo.Models;
@inject TodoService TodoService

<div class="modal @ModalClass" tabindex="-1" role="dialog" style="display:@ModalDisplay">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add a new item</h5>                
            </div>
            <div class="modal-body">
                <EditForm Model="@newTodo" OnValidSubmit="HandleValidSubmit" FormName="AddTodo">


                    <div class="form-group">
                        <label for="todo">What you need to do?</label>
                        <InputText id="todotext" class="form-control" autocomplete="off" @bind-Value="newTodo.TodoText" required />

                    </div>
                    <div class="form-group mt-2">
                        <label for="description">Description</label>
                        <textarea class="form-control" autocomplete="off" rows="3" @bind="newTodo.TodoDescription"></textarea>

                    </div>
                    <div class="form-check mt-3">
                        <input type="checkbox" class="form-check-input" @bind-value="newTodo.IsPinned">
                        <label class="form-check-label">Pin this task</label>
                    </div>

                    <div class="modal-footer mt-3">
                        <button type="submit" class="btn btn-primary">Add</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="() => Close()">Close</button>
                    </div>
                </EditForm>
            </div>
          
        </div>
    </div>
</div>


@if (ShowBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}


@code {
    [Parameter] public EventCallback OnTodoAdded { get; set; }
    public TodoModel newTodo = new TodoModel();
    public Guid Guid = Guid.NewGuid();
    public string ModalDisplay = "none;";
    public string ModalClass = "";
    public bool ShowBackdrop = false;

    public void Open()
    {
        ModalDisplay = "block;";
        Task.Delay(200);
        ModalClass = "Show";
        ShowBackdrop = true;
        StateHasChanged();
    }

    public void Close()
    {
        ModalDisplay = "none";
        ModalClass = "";
        ShowBackdrop = false;
        StateHasChanged();
    }

    private async Task HandleValidSubmit()
    {
        await TodoService.AddItemAsync(newTodo);    
        newTodo = new TodoModel();
        await OnTodoAdded.InvokeAsync();
        Close();

    }
  

}