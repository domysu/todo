@using MongoDB.Bson;

@using ToDo.Models;
@using ToDo.Services;
@inject TodoService TodoService
@page "/todo"
@rendermode InteractiveServer

<h3>Todo</h3>

<EditForm Model="@newTodo" OnValidSubmit="HandleValidSubmit" FormName="AddTodo">


    <div class="form-group">
        <label for="todo">What you need to do?</label>
        <InputText id="todotext" class="form-control" @bind-Value="newTodo.TodoText"  required />
    </div>
    <div class="d-grid gap-2 d-md-flex justify-content-md-end">
        <button type="submit" class="btn btn-primary mt-3">Add</button>
    </div>
</EditForm>

<button type="button" class="btn btn-danger" @onclick="() => DeleteAll()">Clear List</button>

@foreach(var todolist in TodoList)
    {
<div class="row mt-3 shadow-sm " >
    <div class="col-auto d-flex justify-content-center">@todolist.TodoText</div>
    <div class="col d-flex justify-content-end"><button class="btn btn-primary" @onclick="() => DeleteItem(todolist)">Delete</button></div>
  
</div>
}


@code {
    private List<TodoModel> TodoList = new List<TodoModel> { };
    private TodoModel newTodo = new TodoModel();

    protected override async Task OnInitializedAsync()
    {
        TodoList = await TodoService.GetTodoListAsync();


    }
    public async Task RefreshUI()
    {
        TodoList = await TodoService.GetTodoListAsync();
    }
    public async Task HandleValidSubmit()
    {

        await TodoService.AddItemAsync(newTodo);
        newTodo = new TodoModel();

        await RefreshUI();

    }



    private async Task DeleteItem(TodoModel todoItem)
    {
        await TodoService.RemoveItemAsync(todoItem);

        await RefreshUI();
    }

    private async Task DeleteAll()
    {


        
        await TodoService.DeleteAll();

        await RefreshUI();
    }


}
